@@ @HealTargetScreen
@PROPS@ fontColor=black;autoExecute=true;fontSize=1.00em;sortBy=;color=default;playerEditable=false;applyToSelected=false;group=internal;tooltip=
<!-- Pops up the targetting GUI that has targets in dropdown lists, and modifications to apply to the heal if applicable -->

<!-- atkKey = Integer switch used to determine which roll combinations to use: -->
<!-- 7 = Single/Multi heal -->
<!-- 8 = AOE heal -->
<!-- 9 = Self only heal -->
[h:targetArgs = macro.args]
[h:atkKey          = json.get(macro.args, 0)]
[h:atkName         = json.get(macro.args, 1)]
[h:yesHeal         = json.get(macro.args, 2)]
[h:healMod         = json.get(macro.args, 3)]
[h:healRoll        = json.get(macro.args, 4)]
[h:yesTempHP       = json.get(macro.args, 5)]
[h:tempHPMod       = json.get(macro.args, 6)]
[h:tempHPRoll      = json.get(macro.args, 7)]
[h:maxRange        = json.get(macro.args, 8)]
[h:numTargets      = json.get(macro.args, 9)]
[h:friendlyFire    = json.get(macro.args, 10)]  <!-- 0 NPC, 1 PC, 2 Both -->
[h:otherSource     = json.get(macro.args, 11)]  <!-- name of other token to use as source for figuring targets based on range -->
[h:useSurge        = json.get(macro.args, 12)]
[h:selfStateJson   = json.get(macro.args, 13)] <!-- Json holding states to be applied to self with this power -->
[h:modDefenseJson  = json.get(macro.args, 14)]
[h:modAttackJson   = json.get(macro.args, 15)]
[h:includeSelf     = json.get(macro.args, 16)]
[h:bloodyOnly      = json.get(macro.args, 17)]
[h:token     	   = json.get(targetArgs, 18)]
[h:powaStr     	   = json.get(targetArgs, 19)]
[h:saveSurge       = json.get(targetArgs, 20)]
[h:targList = getSelectedNames("json")]
[h,if(!json.isEmpty(targList)),CODE:
{
};{
[targList = "[]"]
}]
[dialog("Power Options", "input=1; width=400; height=500"):
{
  <html>
  <body>
  <link rel='onChangeSelection' type='macro' href='[r:macroLinkText("HealTargetScreen@this", "none", targetArgs, "")]'></link>
   <form name='powerOptions' method='json' action='[r:macroLinkText("ExecuteHeal@this", "all", "", token)]'>
  [r:powaStr]<hr>
  <table width='350'>
   <tr><td><b><u>Targets</u></b></td><td><b><u>Heal Mod. &plusmn;</u></b></td><td><b><u>Temp HP Mod. &plusmn;</u></b></td></tr>
  [r,foreach(targId, targList, ""),code:
  {
     <tr>
	 <td><b>[r:targId]:</b></td>
	 <td><input name='[r:strformat("healmodTarget%{roll.count}")]' type='text' value='0' size='5'></input></td>
	 <td><input name='[r:strformat("tempmodTarget%{roll.count}")]' type='text' value='0' size='5'></input></td>
	 </tr>
  }]
  
  </table>
   <hr>
  <hr>
  <table>
 <tr><td align='center'><input type='submit' name='SubmitButton' value='Attack'></input>&nbsp;<input type='submit' name='SubmitButton' value='Cancel'></input></td></tr>
 </table>
  <input type='hidden' name='atkKey' value='[r:atkKey]'></input>
  <input type='hidden' name='atkName' value='[r:atkName]'></input>
  <input type='hidden' name='yesHeal' value='[r:yesHeal]'></input>
  <input type='hidden' name='healMod' value='[r:healMod]'></input>
  <input type='hidden' name='healRoll' value='[r:healRoll]'></input>
  <input type='hidden' name='yesTempHP' value='[r:yesTempHP]'></input>
  <input type='hidden' name='tempHPMod' value='[r:tempHPMod]'></input>
  <input type='hidden' name='tempHPRoll' value='[r:tempHPRoll]'></input>
  <input type='hidden' name='useSurge' value='[r:useSurge]'></input>
  <input type='hidden' name='selfStateJson' value='[r:selfStateJson]'></input>
  <input type='hidden' name='modDefenseJson' value='[r:modDefenseJson]'></input>
  <input type='hidden' name='modAttackJson' value='[r:modAttackJson]'></input>
  <input type='hidden' name='targList' value='[r:targList]'></input>
  <input type='hidden' name='powaStr' value='[r:powaStr]'></input>
  <input type='hidden' name='saveSurge' value='[r:saveSurge]'></input>
  </form>
  </body>
  </html>
}]
[h:abort(0)]

!!