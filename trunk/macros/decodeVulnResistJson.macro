<!-- decodeVulnResistJson user defined function -->
[h:VRJson       = arg(0)]
[h:targetName           = arg(1)]
[h:selfName             = getName()]
[h: propVulnResistTargetJson = getProperty("TempResVuln", targetName)]
[h: propVulnResistSelfJson = getProperty("TempResVuln", selfName)]
[h,if(json.isEmpty(VRJson)): newVulnResistTargetJson = "{}"; newVulnResistTargetJson = json.get(VRJson, "0")]
[h,if(json.isEmpty(VRJson)): newVulnResistSelfJson = "{}"; newVulnResistSelfJson = json.get(VRJson, "1")]

[h, if(json.isEmpty(newVulnResistSelfJson)), CODE:
{};
{[h, if(json.isEmpty(propVulnResistSelfJson)), CODE:
{[h: applyVulnResistJson(newVulnResistSelfJson, selfName)]};
{[h: applyVulnResistJson(json.unique(json.merge(propVulnResistSelfJson, newVulnResistSelfJson)), selfName)]}]};]

[h, if(json.isEmpty(newVulnResistTargetJson)), CODE:
{};
{[h, if(json.isEmpty(propVulnResistTargetJson)), CODE:
{[h: applyVulnResistJson(newVulnResistTargetJson, targetName)]};
{[h: applyVulnResistJson(json.unique(json.merge(propVulnResistTargetJson, newVulnResistTargetJson)), targetName)]}]};]