<!-- Modifier Dialog -->

[h:selfName             = getName()]
[h: propDefenseSelfJson = getProperty("AllDefModList", selfName)]
[h, if(length(propDefenseSelfJson) > 0): propLength = json.length(propDefenseSelfJson); propLength = 0]
[h: propAttackSelfJson = getProperty("AllAtkModList", selfName)]
[h, if(length(propAttackSelfJson) > 0): propLength2 = json.length(propAttackSelfJson); propLength2 = 0]
[h: propVulnResistSelfJson = getProperty("TempResVuln", selfName)]
[h, if(length(propVulnResistSelfJson) > 0): propLength3 = json.length(propVulnResistSelfJson); propLength3 = 0]
[r, if(propLength > 0 || propLength2 > 0 || propLength3 > 0), code:
{[dialog("Modifiers"): {
  <html>
    <head>
      <title>Modifiers on [r: selfName]</title>
    </head>
    <body>
     <table style="text-align:center" border="1">
	 <tr>
     <td style="text-align:center">
	 <form name ="ModifierForm" method = "json" action = [r: macroLinkText("DeleteModifier@"+getMacroLocation(), "self", "", "selected")] border="1">
	  [c(propLength,'<BR>'),code:{[h: propDefenseJsonObject= json.get(propDefenseSelfJson, roll.count)]
	  <input type="checkbox" name=[r: "mod"+roll.count] />
	  <span style="color:blue; font-size:12">[r: json.get(propDefenseJsonObject, "modName")]: [r, if(json.get(propDefenseJsonObject, "modValue")>0): "+"][r: json.get(propDefenseJsonObject, "modValue")] to 
	  [r, switch(json.get(propDefenseJsonObject, "modDef")):
	  case 0: "All";
	  case 1: "AC";
	  case 2: "Fortitude";
	  case 3: "Reflex";
	  case 4: "Willpower";]
	   by [r: json.get(propDefenseJsonObject, "modOwner")]
	  </span> }]
	  <br>
	  <input type="hidden" name="propSelfJson" value='[r: propDefenseSelfJson]'></input>
	  <input type="hidden" name="propLength" value='[r: propLength]'></input>
	  <input type="hidden" name="selfName" value='[r: selfName]'></input>
	  <input type="submit" value="Delete Defense" />
	 </form>
	 </td>
	 </tr>
	 <tr>
     <td style="text-align:center">
	 <form name ="ModifierForm" method = "json" action = [r: macroLinkText("DeleteModifier@"+getMacroLocation(), "self", "", "selected")]>
	  [c(propLength2,'<BR>'),code:{[h: propAttackJsonObject= json.get(propAttackSelfJson, roll.count)]
	  <input type="checkbox" name=[r: "mod"+roll.count] />
	  <span style="color:blue; font-size:12">[r: json.get(propAttackJsonObject, "modName")]: [r, if(json.get(propAttackJsonObject, "modValue")>0): "+"][r: json.get(propAttackJsonObject, "modValue")] to 
	  [r, switch(json.get(propAttackJsonObject, "modAtk")):
	  case 0: "All";
	  case 1: "Hit";
	  case 2: "Damage";]
	   by [r: json.get(propAttackJsonObject, "modOwner")]
	  </span> }]
	  <br>
	  <input type="hidden" name="propSelfJson" value='[r: propAttackSelfJson]'></input>
	  <input type="hidden" name="propLength" value='[r: propLength2]'></input>
	  <input type="hidden" name="selfName" value='[r: selfName]'></input>
	  <input type="submit" value="Delete Attack" />
	 </form>
	 </td>
	 </tr>
	 <tr>
     <td style="text-align:center">
	 <form name ="ModifierForm" method = "json" action = [r: macroLinkText("DeleteModifier@"+getMacroLocation(), "self", "", "selected")]>
	  [c(propLength3,'<BR>'),code:{[h: propVulnResistJsonObject= json.get(propVulnResistSelfJson, roll.count)]
	  <input type="checkbox" name=[r: "mod"+roll.count] />
	  <span style="color:blue; font-size:12">
	  [r, switch(json.get(propVulnResistJsonObject, "modDef")):
	  case 0: "Resist";
	  case 1: "Vulnerable";] [r: json.get(propVulnResistJsonObject, "modValue")] [r: json.get(propVulnResistJsonObject, "modName")] by [r: json.get(propVulnResistJsonObject, "modOwner")]
	  </span> }]
	  <br>
	  <input type="hidden" name="propSelfJson" value='[r: propVulnResistSelfJson]'></input>
	  <input type="hidden" name="propLength" value='[r: propLength3]'></input>
	  <input type="hidden" name="selfName" value='[r: selfName]'></input>
	  <input type="submit" value="Delete Resist/Vuln" />
	 </form>
     </td>
	 </tr>
     </table>
    </body>
  </html>
}]}]
[abort(0)]