<!-- detailTargetScreen user-defined function -->

[h:inputJson = json.append("[]",
    strformat("junk|<html><b>Power Name: %s</b></html>||LABEL|SPAN=TRUE",atkName),
    strformat("junk|<html><b>Target Name: %s</b></html>||LABEL|SPAN=TRUE",targ),
    ".|---------------------------------------------------------------------------------------------------||LABEL|SPAN=TRUE",
    strformat("CA|%d|Combat Advantage vs. Target|CHECK",defCa),
    strformat("charge|%d|Charge Attack vs. Target|CHECK",defCharge),
    strformat("cover|None,Regular(-2),Superior(-5)|Cover vs. Target|RADIO|ORIENT=H SELECT=%d",defCover),
    strformat("conceal|None,Regular(-2),Total(-5)|Concealment vs. Target|RADIO|ORIENT=H SELECT=%d",defConceal),
    strformat("longRange|%d|Long Range vs. Target|CHECK",defLongRange),
    strformat("miscAtk|%d|<html>Miscellaneous <b>modifier</b> to attack</html>",defMiscAtk),
    strformat("miscDam|%d|<html>Miscellaneous <b>modifier</b> to damage</html>",defMiscDam)
)]
[h,if(atkKey==1 || atkKey==4): inputJson = json.append(inputJson,strformat("yesDamRoll|%d|Roll damage? |CHECK",defYesDamRoll))]
[h,if(atkKey==1 || atkKey==2 || atkKey==4 || atkKey==5): inputJson = json.append(inputJson,strformat("rerollAttack|%d|Reroll d20 for attack and take highest? |CHECK",defRerollAttack))]
[h:status = input(json.toList(inputJson,"##"))]
[h:abort(status)]

<!-- Skip attack portion on attack 3 and 6 -->
[h:inputAJson="{}"]
[h,if(CA): inputAJson = json.set(inputAJson,"CA",2)]
[h,if(charge): inputAJson = json.set(inputAJson,"charge",1)]
[h,if(cover>0): inputAJson = json.set(inputAJson,"cover",if(cover==1,-2,-5))]
[h,if(conceal>0): inputAJson = json.set(inputAJson,"concealment",if(conceal==1,-2,-5))]
[h,if(longRange): inputAJson = json.set(inputAJson,"range",-2)]
[h,if(miscAtk!=0): inputAJson = json.set(inputAJson,"misc",miscAtk)]
[h,if(getState("Restrained")): inputAJson = json.set(inputAJson,"Restrained",-2)]
[h,if(getState("Prone")): inputAJson = json.set(inputAJson,"SelfProne",-2)]
[h,if(getState("Blinded") && listFind(keywords,"Area") == -1): inputAJson = json.set(inputAJson,"concealment",-5)]
[h,if(atkKey!=3 && atkKey!=6): evalMacro('[h,macro("BonusTotal@"+UseLib): json.append("[]", atkMod, "AttackBonuses", miscAtk, inputAJson)]')]
[h,if(atkKey!=3 && atkKey!=6): atkText=json.get(macro.return, 0)]
[h,if(atkKey!=3 && atkKey!=6): atkVal=json.get(macro.return, 1)]
<!-- Skip damage portion on attacks 2 and 5 -->
[h,if(atkKey!=2 && atkKey!=5 && yesDamRoll): evalMacro('[h,macro("BonusTotal@"+UseLib): json.append("[]", damMod, "DamageBonuses", miscDam, "{}")]')]
[h,if(atkKey!=2 && atkKey!=5 && yesDamRoll): damText=json.get(macro.return, 0);damText="0"]
[h,if(atkKey!=2 && atkKey!=5 && yesDamRoll): damVal=json.get(macro.return, 1);damVal="0"]

[h,if(yesDamRoll==0): useDam="0"]
[h,if(yesDamRoll==0): useCritDam="0"]

[h,if(atkKey>3 && yesDamRoll): useDam=eval(string(damRoll)); useDam=damRoll]
[h,if(atkKey>3 && yesDamRoll): useCritDam=eval(string(critDamRoll)); useCritDam=critDamRoll]