<!-- ApplyMark macro -->
<!-- Returns: none -->
<!-- Parameters: 1 -->
<!-- 0 : Target name -->
<!-- called only if a attack parameter or token property indicates that a Mark is to be applied as part of an attack -->

<!-- Halo #RRGGBB values: Blue = #0000FF, Cyan = #00FFFF, Green = #00FF00, Orange = #FF9C00, Red = #FF0000, Yellow = #FFFF00 -->
[h:targetName = json.get(macro.args, 0)]

[h:mJson=getTokenStates("json","Mark")]
[h:haloz = getHalo()]
[h,switch(haloz):
  case "#0000ff": haloz="blue";
  case "#00ffff": haloz="cyan";
  case "#00ff00": haloz="green";
  case "#ff9c00": haloz="orange";
  case "#ff0000": haloz="red";
  case "#ffff00": haloz="yellow";
  default: haloz=""
]
[h,if(getProperty("MarkedBy",targetName) != getName() && length(haloz) == 0): callFind = 1;callFind = 0]
[h,if(callFind): evalMacro('[h,macro("FindMark@"+UseLib): ""]')]
[h,if(callFind): setHalo(macro.return)]
[h,if(callFind): updateTargetState("Marked_"+macro.return,1,targetName); updateTargetState("Marked_"+haloz,1,targetName)]
[h:updateTargetProperty("MarkedBy",getName(),targetName)]