<!-- CallSingleAttack macro -->

[h:miscDamMod = json.get(macro.args, 0)]
[h:damRoll = json.get(macro.args, 1)]
[h:maxDamRoll = json.get(macro.args, 2)]
[h:CR = json.get(macro.args, 3)]

[h:miscAtkMod=json.toStrProp(PassAttackBonuses)]
[h:varsFromStrProp(miscAtkMod)]

<!-- decode miscDamMod if it isn't 0 -->
[h,if(miscDamMod!=0),code: 
{
  [h: miscDamMod = decode(miscDamMod)]
  [h: varsFromStrProp(miscDamMod)]
};{
  [h: miscDamMod = ""]
}]

[h: crits = 0]
[h: fumbles = 0]
[h: critText=""]
[h: fumbleText=""]

<html>
  <table border="0" width="500">
    <tr>
      <td style="padding:2px 5px;" align=left>
      
        <!-- 1d20+myLevel+hitStat+EX+MAG = (15 + 3 + 5 + 1 + 1) -->
        [h: atkText = ""]
        [h: atkVal  = ""]
        [h,for(i,0,countStrProp(miscAtkMod),1,""), CODE:
        {
          [h: atkText = atkText + indexKeyStrProp(miscAtkMod, i)]
          [h,if(i!=countStrProp(miscAtkMod)-1): atkText = atkText + "+"]
          [h: atkVal = atkVal + indexValueStrProp(miscAtkMod, i)]
          [h,if(i!=countStrProp(miscAtkMod)-1): atkVal = atkVal + " + "]
        }]
        [h: dieRoll = eval("1d20")]
        [h: atkTT = "1d20+" + atkText + " = (eval(" + dieRoll + ") + " + atkVal + ")"]
        [h: atkText = "[res = dieRoll + " + atkText + "]"]
        [h: evalMacro(atkText)]
        <b>Attack:</b> <span style=color:red>[t(res): atkTT]</span>
      </td>
      [h,SWITCH(dieRoll):
        case 20: crits=crits+1;
        case 1:  fumbles=fumbles+1;
        default: ""
      ]
      <td style="padding:2px 5px;" align=left>
        [h: dmgText = ""]
        [h: dmgVal  = ""]
        [SWITCH(dieRoll),CODE:
          case 20: 
          {
            <!-- 2*eval(damRoll)+eval(CR)+damStat+2 = (2 * eval(1d10+2) + eval(1d10+1d6+2) + 5 + 2) -->
            <!-- eval(damRoll)+damStat+2 = (2 * 8 + 11 + 5 + 2) -->
            [h,for(i,0,countStrProp(miscDamMod),1,""), CODE:
            {
              [h: dmgText = dmgText + indexKeyStrProp(miscDamMod, i)]
              [h,if(i!=countStrProp(miscDamMod)-1): dmgText = dmgText + "+"]
              [h: dmgVal = dmgVal + indexValueStrProp(miscDamMod, i)]
              [h,if(i!=countStrProp(miscDamMod)-1): dmgVal = dmgVal + " + "]
            }]
            [h: res = eval(damRoll)]
            [h: resCR = 0]
            [h,if(CR!=0): resCR = eval(CR)]
            [h: dmgTT = "2*eval(" + damRoll + ")+"]
            [h,if(resCR!=0): dmgTT = dmgTT + "eval(" + CR + ")+"]
            [h: dmgTT = dmgTT + dmgText + " = (2 * eval(" + res + ")"]
            [h,if(resCR!=0): dmgTT = dmgTT + " + eval(" + resCR + ")"]
            [h: dmgTT = dmgTT + " + " + dmgVal + ")"]
            [h: dmgText = "[res = 2*res + resCR + " + dmgText + "]"]
            [h: evalMacro(dmgText)]
            [h,if(res<1): res = 1]
            <b>Critical:</b> <span style=color:red>[t(res): dmgTT]</span>
          };
          default:
          {
            <!-- eval(damRoll)+damStat+2 = (eval(1d10+2) + 5 + 2) -->
            <!-- eval(damRoll)+damStat+2 = (8 + 5 + 2) -->
            [h,for(i,0,countStrProp(miscDamMod),1,""), CODE:
            {
              [h: dmgText = dmgText + indexKeyStrProp(miscDamMod, i)]
              [h,if(i!=countStrProp(miscDamMod)-1): dmgText = dmgText + "+"]
              [h: dmgVal = dmgVal + indexValueStrProp(miscDamMod, i)]
              [h,if(i!=countStrProp(miscDamMod)-1): dmgVal = dmgVal + " + "]
            }]
            [h: res = eval(damRoll)]
            [h: dmgTT = "eval(" + damRoll + ")+" + dmgText + " = (eval(" + res + ") + " + dmgVal + ")"]
            [h: dmgText = "[res = res + " + dmgText + "]"]
            [h: evalMacro(dmgText)]
            [h,if(res<1): res = 1]
            <b>Damage:</b> <span style=color:red>[t(res): dmgTT]</span>
          }
        ]
      </td>
    </tr>
  </table>
</html>
[h,if(crits>0):critText="<span style=color:red>***CRITICAL HIT*** </span>"]
[h,if(crits>1):critText="<span style=color:red>***"+crits+" CRITICAL HIT(s)*** </span>"]
[h,if(fumbles>0):fumbleText="<span style=color:red>***FUMBLE***</span>"]
[h,if(fumbles>1):fumbleText="<span style=color:red>***"+fumbles+" FUMBLE(s)***</span>"]
[if(critText!="" || fumbleText!=""): critText + " " + fumbleText]