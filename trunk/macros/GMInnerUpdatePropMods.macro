<!-- GMInnerUpdatePropMods macro --><!-- Parameters: 8 --><!-- 0 : Radio button result for attack --><!-- 1 : Text entry for attack --><!-- 2 : Radio button result for damage --><!-- 3 : Text entry for damage --><!-- 4 : Radio button result for resist --><!-- 5 : Text entry for resist --><!-- 6 : Radio button result for vuln --><!-- 7 : Text entry for vuln --><!-- 8 : Token name --><!-- Called by GMUpdatePropMods macro to avoid large nested code: block -->[h:atkRadio         = json.get(macro.args, 0)][h:atkText          = json.get(macro.args, 1)][h:damRadio         = json.get(macro.args, 2)][h:damText          = json.get(macro.args, 3)][h:resistRadio      = json.get(macro.args, 4)][h:resistText       = json.get(macro.args, 5)][h:vulnRadio        = json.get(macro.args, 6)][h:vulnText         = json.get(macro.args, 7)][h:tName            = json.get(macro.args, 8)][h:switchToken(tName)][h,switch(atkRadio),code:  case 0: {""};  case 1: { [h:atkText = strformat("{%s}",atkText)]            [h,foreach(item,json.fields(atkText)): AttackBonuses = json.set(AttackBonuses,item,json.get(atkText,item))] };  case 2: { [h,foreach(item,json.toList(atkText)): AttackBonuses = json.remove(AttackBonuses,item)] };  default: {""}][h,switch(damRadio),code:  case 0: {""};  case 1: { [h:damText = strformat("{%s}",damText)]            [h,foreach(item,json.fields(damText)): DamageBonuses = json.set(DamageBonuses,item,json.get(damText,item))] };  case 2: { [h,foreach(item,json.toList(damText)): DamageBonuses = json.remove(DamageBonuses,item)] };  default: {""}][h,switch(resistRadio),code:  case 0: {""};  case 1: { [h:resistText = strformat("{%s}",resistText)]            [h,foreach(item,json.fields(resistText)): TempResist = json.set(TempResist,item,json.get(resistText,item))] };  case 2: { [h,foreach(item,json.toList(resistText)): TempResist = json.remove(TempResist,item)] };  default: {""}][h,switch(vulnRadio),code:  case 0: {""};  case 1: { [h:vulnText = strformat("{%s}",vulnText)]            [h,foreach(item,json.fields(vulnText)): TempVulnerable = json.set(TempVulnerable,item,json.get(vulnText,item))] };  case 2: { [h,foreach(item,json.toList(vulnText)): TempVulnerable = json.remove(TempVulnerable,item)] };  default: {""}]